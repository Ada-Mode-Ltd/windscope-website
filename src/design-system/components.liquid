---
layout: design.liquid
title: Components
---

{% assign quote = design.quotes | first %}
{% assign quotes = design.quotes %}
{% assign people = design.people %}
{% assign editable = true %}

<div class="v-gap-24">
    <p>This page has details of the different typography found throughout the Windscope site.</p>

    <div class="columns">
        <div class="flow">
            <h2>Buttons</h2>
            <p>This section contains the styles for the different button types used around the site.</p>
            <label for="text">
                Edit text:
                <input name="text-buttons" placeholder="Type some text here" type="text">
            </label>
        </div>
        <div class="flow">
            <h3>Regular buttons</h3>
            <a class="button primary" data-dynamic-buttons data-initial="Button: Primary" href="#"></a>
            <a class="button secondary" data-dynamic-buttons data-initial="Button: Secondary" href="#"></a>
            <a class="button tertiary" data-dynamic-buttons data-initial="Button: Tertiary" href="#"></a>
            <hr>
            <h3>Buttons with icons (aka Freak buttons)</h3>
            <a class="button primary" data-dynamic-buttons data-icon data-initial="Button: Primary" href="#"></a>
            <a class="button secondary" data-dynamic-buttons data-icon data-initial="Button: Secondary" href="#"></a>
            <a class="button tertiary" data-dynamic-buttons data-icon data-initial="Button: Tertiary" href="#"></a>
        </div>
    </div>
    <hr>
    <!-- Quote -->
    <div class="flow">
        <h2>Quote</h2>
        <p>This section contains the styles for the different single and multiple quotes used around the site.</p>
        <div class="flow">
            <h3>Single quote</h3>
            <div class="quote-holder">{% include 'components/quote.liquid' %}</div>
        </div>
        <div class="flow">
            <h3>Multiple quotes</h3>
            <div class="quote-holder">
                {% for quote in quotes %}
                    {% assign quoteIndex = 'quote-' | append: forloop.index %}
                    {% include 'components/quote.liquid' %}
                {% endfor %}
            </div>
            <!-- Todo: Add JS to handle multiple quotes -->
        </div>
    </div>
    <!-- People -->
    <div class="flow">
        <h3>People</h3>
        <p>This section shows multiple person components grouped as the would appear on the website.</p>
        {% include 'components/people.liquid' %}
    </div>

    <!-- CTA Section -->
    <div class="flow">
        <h3>CTA Section</h3>
        <p>This section shows the different variants of the CTA Section that are available. All text is editable.</p>
        <div class="flow">
            <h4>Single column</h4>
            {% include 'components/cta-section.liquid' %}
        </div>
    </div>

    <!-- Features -->
    <div class="flow">
        <h3>Product features</h3>
        <p>This section shows the different variants of the Product Features component that are available. All text is editable.</p>
        <div class="flow">
            <h4>Large</h4>
            {% assign featureStyle = "large" %}
            {% assign featureImagePlacement = "right" %}
            {% include 'components/prod-feature.liquid' %}
        </div>
    </div>
</div>

<script>
    // Select all elements with data-dynamic
    var buttons = document.querySelectorAll("[data-dynamic-buttons]");
    let buttonText = document.getElementsByName("text-buttons")[0];
    content = "";

    buttonText.addEventListener("keyup", function (event) {
        content = buttonText.value;
        updateElements(buttons);
    });

    function updateElements(elements) {
        for (let i = 0; i < elements.length; i++) {
            const icon = elements[i].hasAttribute("data-icon")
                ? `<svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
	<path d="M28.05 35.9001L25.9 33.8001L34.3 25.4001H8V22.4001H34.3L25.85 13.9501L28 11.8501L40.05 23.9001L28.05 35.9001Z" fill="currentColor" />
</svg>`
                : "";
            if (content.length > 0) {
                elements[i].innerHTML = content + icon;
            } else {
                elements[i].innerHTML = elements[i].getAttribute("data-initial") + icon;
            }
        }
    }

    updateElements(buttons);
</script>